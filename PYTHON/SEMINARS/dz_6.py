# Винни-Пух попросил Вас посмотреть, есть ли в его стихах ритм. Поскольку разобраться в его кричалках не настолько просто, насколько 
# легко он их придумывает, Вам стоит написать программу. Винни-Пух считает, что ритм есть,

# line = "пара-ра-рам рам-пам-папам па-ра-па-да"
# lines = line.split()
 
# # print(lines)
 
# lst = [sum(x in 'уеыаоэяию' for x in lin)
#  for lin in lines]
 
# if len(set(lst)) == 1 :
#     res = "Парам пам-пам"  
# else: 
#     res = "Пам парам"
 
# print(res)


# Напишите функцию print_operation_table(operation, num_rows=6, num_columns=6), 
# которая принимает в качестве аргумента функцию, вычисляющую элемент по номеру строки и столбца. 
# Аргументы num_rows и num_columns указывают число строк и столбцов таблицы, которые должны быть распечатаны.
# Нумерация строк и столбцов идет с единицы (подумайте, почему не с нуля). Примечание: бинарной операцией называется 
# любая операция, у которой ровно два аргумента, как, например, у операции умножения.
# Ввод:

# print_operation_table(lambda x, y: x * y)

# Вывод:
# 1 2 3 4 5 6

# 2 4 6 8 10 12
# 3 6 9 12 15 18
# 4 8 12 16 20 24
# 5 10 15 20 25 30
# 6 12 18 24 30 36

# def print_operation_table(operation, num_rows=6, num_columns=6):
#     for x in range(1, num_rows + 1):
#         nums = []
#         for y in range(1, num_columns + 1):
#             num = operation(x, y)
#             nums.append(num)
#         print('\t'.join([str(x) for x in nums]))
        


# Напишите функцию same_by(characteristic, objects), которая проверяет, все ли объекты имеют одинаковое 
# значение некоторой характеристики, и возвращают True, если это так. Если значение характеристики для 
# разных объектов отличается - то False. Для пустого набора объектов, функция должна возвращать True. 
# Аргумент characteristic - это функция, которая принимает объект и вычисляет его характеристику.
# Пример:
# same_by(lambda x: x % 2, [2,4,6,8])
# Ответ: True




# def same_by(characteristic, objects): 
#      result = list(map(characteristic, objects)) 
#      print(all([i == result[0] for i in result])) 
  
  
# same_by(lambda x: x % 2, [2, 4, 6, 8])
